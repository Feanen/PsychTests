<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="PsychologistWindowStyles.xaml"/>
        <ResourceDictionary Source="CustomStyles.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <SolidColorBrush x:Key="FirstColor" Color="#fffce6"/>
    <SolidColorBrush x:Key="SecondColor" Color="#222d1e"/>

    <Style x:Key="ScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanHorizontallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" CanVerticallyScroll="False" Grid.Column="0" Content="{TemplateBinding Content}" CanContentScroll="{TemplateBinding CanContentScroll}" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
                        <ScrollBar x:Name="PART_VerticalScrollBar" Style="{DynamicResource ResultsWindowScrollBarStyle}" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <SolidColorBrush x:Key="TextColor" Color="#222d1e"/>
    <Style TargetType="{x:Type ScrollBar}" x:Key="ResultsWindowScrollBarStyle" BasedOn="{StaticResource ScrollBarStyle}">
        <Setter Property="BorderBrush" Value="#222d1e"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                            <RowDefinition Height="0.00001*"/>
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                        </Grid.RowDefinitions>
                        <Border Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Padding="{TemplateBinding Padding}"
                        CornerRadius="7"
                        Grid.Row="1"/>

                        <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1" Margin="1">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{DynamicResource ResultsWindowVerticalScrollBarThumbStyle}" />
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ResultsWindowVerticalScrollBarThumbStyle" TargetType="{x:Type Thumb}" BasedOn="{StaticResource ScrollBarThumbVertical}">
        <Setter Property="Background" Value="#222d1e"/>
    </Style>

    <Style TargetType="{x:Type Label}" x:Key="ResultsWindowLabelStyle" BasedOn="{StaticResource CustomLabel}">
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="FontFamily" Value="{StaticResource MontSerrat.Medium}"/>
    </Style>

    <Style TargetType="{x:Type Label}" x:Key="ResultsWindowHeadersStyle" BasedOn="{StaticResource ResultsWindowLabelStyle}">
        <Setter Property="FontFamily" Value="{StaticResource MontSerrat.SemiBold}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
    </Style>

    <Style TargetType="{x:Type Label}" x:Key="ResultsWindowUserNameStyle" BasedOn="{StaticResource ResultsWindowLabelStyle}">
        <Setter Property="FontFamily" Value="{StaticResource MontSerrat.Regular}"/>
        <Setter Property="FontSize" Value="15"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="ResultsWindowDescriptionStyle" BasedOn="{StaticResource RegistrationTextBlockStyle}">
        <Setter Property="FontFamily" Value="{StaticResource MontSerrat.Regular}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Margin" Value="5 0 0 10"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Opacity" Value="1.0"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="ResultsWindowTechniqueNameStyle" BasedOn="{StaticResource ResultsWindowDescriptionStyle}">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Margin" Value="12 0 0 10"/>
        <Setter Property="Foreground" Value="{StaticResource SecondColor}"/>
        <Setter Property="FontFamily" Value="{StaticResource MontSerrat.SemiBold}"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="ResultsWindowUserDataStyle" BasedOn="{StaticResource ResultsWindowTechniqueNameStyle}">
        <Setter Property="FontFamily" Value="{StaticResource MontSerrat.Regular}"/>
        <Setter Property="FontSize" Value="15"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="ResultsWindowShortScaleDescriptionStyle" BasedOn="{StaticResource ResultsWindowDescriptionStyle}">
        <Setter Property="Padding" Value="15 0 0 0"/>
        <Setter Property="FontSize" Value="10"/>
    </Style>

    <Style TargetType="{x:Type Border}" x:Key="ResultsWindowBorderStyle" BasedOn="{StaticResource CustomBorderStyle}">
        <Setter Property="Background" Value="Transparent"/>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="ResultsWindowButtonStyle" BasedOn="{StaticResource CustomRoundedButtonStyle}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontFamily" Value="{StaticResource MontSerrat.Medium}"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" CornerRadius="10" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource SecondColor}"/>
                            <Setter Property="Background" Value="{StaticResource FirstColor}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource SecondColor}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource SecondColor}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource FirstColor}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource FirstColor}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource FirstColor}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource SecondColor}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource SecondColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource FirstColor}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource SecondColor}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource SecondColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>