<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">


    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="OptionMarkFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="14,0,0,0" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="Button.Static.Background" Color="#fffce6"/>
    <SolidColorBrush x:Key="Button.Static.Border" Color="#222d1e"/>
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
    <Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FontFamily" Value="/Resources/Fonts/#Montserrat Regular"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontStyle" Value="Normal"/>
        <Setter Property="Width" Value="230"/>
        <Setter Property="Height" Value="43"/>
        <Setter Property="Margin" Value="8"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" 
                            CornerRadius="10"
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            SnapsToDevicePixels="true"
                            TextElement.Foreground="{TemplateBinding BorderBrush}">
                        <ContentPresenter x:Name="contentPresenter" 
                                          Focusable="False" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          TextElement.Foreground="{TemplateBinding BorderBrush}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            <Setter Property="Background" Value="#222d1e"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#fffce6"/>
                        </Trigger>
                        <Trigger Property="Button.IsMouseOver" Value="False">
                            <Setter Property="Background" TargetName="border" Value="#222d1e"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#fffce6"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#fffce6"/>
                        </Trigger>
                        <Trigger Property="Button.IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#fffce6"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#222d1e"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#222d1e"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#fffce6"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#222d1e"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#333399"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#222d1e"/>
                            <Setter Property="TextElement.Foreground" Value="#222d1e"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="#222d1e"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#fffce6"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#fffce6"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#fffce6"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#222d1e"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#222d1e"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Background" TargetName="border" Value="#222d1e"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#fffce6"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#fffce6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <Style x:Key="ButtonsStyle" TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="/Resources/Fonts/#Montserrat Regular"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontStyle" Value="Normal"/>
        <Setter Property="Width" Value="230"/>
        <Setter Property="Height" Value="43"/>
        <Setter Property="Margin" Value="8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            <Setter Property="Background" Value="#222d1e"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#fffce6"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#fffce6"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#000000"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Background" TargetName="border" Value="#222d1e"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#fffce6"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#fffce6"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#fffce6"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                            <Setter Property="Foreground" Value="#222d1e"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="#222d1e"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#fffce6"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#fffce6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <Style x:Key="RadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="FontFamily" Value="/Resources/Fonts/#Montserrat Regular"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontStyle" Value="Normal"/>
        <Setter Property="Width" Value="230"/>
        <Setter Property="Height" Value="43"/>
        <Setter Property="Margin" Value="8"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10" TextElement.Foreground="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" TextElement.Foreground="{TemplateBinding BorderBrush}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            <Setter Property="Background" Value="#222d1e"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#fffce6"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Background" TargetName="border" Value="#222d1e"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#fffce6"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="Red"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#fffce6"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#222d1e"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#222d1e"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#fffce6"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#222d1e"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#333399"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#222d1e"/>
                            <Setter Property="TextElement.Foreground" Value="#222d1e"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="#222d1e"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#fffce6"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#fffce6"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#fffce6"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#222d1e"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#222d1e"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Background" TargetName="border" Value="#222d1e"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#fffce6"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#fffce6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBlock" x:Key="RadioButtonTextBlockStyle">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#fffce6"/>
        <Setter Property="FontFamily" Value="/Resources/Fonts/#Montserrat Regular"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Opacity" Value="0.5"/>
        <Setter Property="Margin" Value="0 5 5 5"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}" Value="True">
                <Setter Property="Foreground" Value="#222d1e"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}" Value="False">
                <Setter Property="Foreground" Value="#fffce6"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>